[DEFAULT]

# ====== Must-Have ======
# These parameters are required by the pipeline, regardless of your custom code

# ------ Data ------
dataset = nerf_sfm_cam
no_batch = True
# bs = 4
cache = True

# ------ Model ------
model = nerf

# ------ Optimization ------
loss = l2
lr = 1e-4
mgm = -1
epochs = 1000000

# ------ Logging and Checkpointing ------
ckpt_period = 1
vali_period = 1
vali_batches = 8
vis_train_batches = 4
keep_recent_epochs = -1

# ------ IO ------
# To train on Borg, consider setting this to always false, so that when the
# job gets stopped and restarted by Borg, it can resume from a checkpoint, in
# which case, you can handle overwriting in your launch script. Set to true
# here for simpler local debugging
overwrite = True
# The following two decide the output directory
outroot = /tmp/tf-training/
xname = lr{lr}_mgm{mgm}


# ====== Custom ======
# These parameters are whatever your custom dataset and model require

# ------ Data ------
imh = 256
data_root = /cns/is-d/home/gcam-eng/gcam/interns/xiuming/sim/data/render/lego/vision_sfm_100/
gt_light = /cns/is-d/home/gcam-eng/gcam/interns/xiuming/sim/data/envmaps/blender/studio.exr
light_h = 16
ndc = False
near = 0.5
far = 3.5
holdout = 000100,000101,000102,000103,000104

# ------ Model ------
use_views = True
use_lights = True
# Positional encoding
pos_enc = True
n_freqs_xyz = 10
n_freqs_view = 4
n_freqs_light = 4
# De facto batch size: number of random rays per gradient step
n_rays_per_step = 256
#n_rays_per_step = 1024
# Number of samples along a ray
n_samples_coarse = 128
n_samples_fine = 128
lin_in_disp = False
perturb = True
noise_std = 0.0

# ------ Network ------
mlp_chunk = 16384
#mlp_chunk = 65536
mlp_width = 256
enc_depth = 8
enc_skip_at = 4
enc_width = 256
rgb_net_depth = 1
rgb_net_skip_at =
